{"version":3,"sources":["contexts/ThemeContext.js","contexts/ActivityContext.js","components/common.js","components/Button.js","components/MainContainer.js","components/CategoryPicker.js","components/Activity.js","components/ThemeSwitcher.js","App.js","serviceWorker.js","index.js","config.js"],"names":["themes","light","color","background","dark","ThemeContext","React","createContext","Provider","props","_React$useState","useState","_React$useState2","Object","slicedToArray","theme","setTheme","value","_React$useState3","_React$useState4","bodyBg","setBodyBg","useEffect","newBodyBg","Color","alpha","string","document","body","style","backgroundColor","react_default","a","createElement","children","ActivityContext","List","JSON","parse","localStorage","getItem","list","setList","activeIndex","setActiveIndex","toArray","newActivity","_newActivity","asyncToGenerator","regenerator_default","mark","_callee","newAct","wrap","_context","prev","next","id","nanoid","oldList","insert","stop","this","apply","arguments","editActivity","activity","index","findIndex","act","set","deleteActivity","delete","reset","setItem","stringify","themed","Component","useContext","assign","basicStyle","css","_templateObject","containerStyle","_templateObject2","Btn","styled","button","Button_templateObject","concat","readOnly","small","disabled","negate","Button","onClick","e","div","MainContainer_templateObject","CATEGORIES","CategoryPicker","map","cat","key","margin","onChange","EDIT_MODES","StyledContainer","Activity_templateObject","active","TextArea","TextareaAutosize","Activity_templateObject2","Title","_templateObject3","Controls","_templateObject4","ControlEditor","_templateObject5","Actions","_templateObject6","XBtn","_templateObject7","LabeledButton","Fragment","label","dateShortcuts","Today","moment","Yesterday","subtract","Clear","getInitialState","objectSpread","name","details","category","status","dueDate","Activity","editMode","setEditMode","changed","setChanged","_React$useState5","Map","_React$useState6","state","setState","activityContext","hasChanged","hash","toObject","dueDateVal","get","format","placeholder","useCacheForDOMMeasurements","txt","oldValue","Activity_LabeledButton","title","oldState","clear","rc_datetime_picker_cjs","shortcuts","fontSize","stopPropagation","ThemeSwitcher","nightModeEnabled","setNightMode","_React$useContext","react_switch_default","checked","uncheckedIcon","height","width","alt","src","checkedIcon","className","FloatRight","App_templateObject","Divider","App_templateObject2","Stats","App_templateObject3","ActivityList","HeaderControls","_React$useContext2","length","filter","Github","App_templateObject4","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","ActivityContext_Provider","MainContainer","href","GITHUB_LINK","App_HeaderControls","App_ActivityList","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.f6924b8f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Color from \"color\";\r\n\r\n//Theme definitions here\r\nconst themes = {\r\n  light: {\r\n    color: \"black\",\r\n    background: \"white\"\r\n  },\r\n  dark: {\r\n    color: \"lightgrey\",\r\n    background: \"black\"\r\n  }\r\n};\r\n\r\nconst ThemeContext = React.createContext();\r\n\r\nexport function Provider(props) {\r\n  const [theme, setTheme] = React.useState(themes.light);\r\n  const value = {\r\n    theme,\r\n    setTheme,\r\n    themes\r\n  };\r\n  const [bodyBg, setBodyBg] = React.useState(\"blue\");\r\n  React.useEffect(\r\n    () => {\r\n      //get denser color\r\n      const newBodyBg = Color(theme.background)\r\n        .alpha(0.9)\r\n        .string();\r\n      setBodyBg(newBodyBg);\r\n    },\r\n    [theme]\r\n  );\r\n  document.body.style.backgroundColor = bodyBg;\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ThemeContext;\r\n","import React from \"react\";\r\nimport { List } from \"immutable\";\r\nimport nanoid from \"nanoid\";\r\nconst ActivityContext = React.createContext();\r\n\r\nexport function Provider(props) {\r\n  const [list, setList] = React.useState(\r\n    List(JSON.parse(localStorage.getItem(\"list\") || \"[]\"))\r\n  );\r\n  const [activeIndex, setActiveIndex] = React.useState();\r\n  const value = {\r\n    list: list.toArray(),\r\n    newActivity: async () => {\r\n      const newAct = { id: nanoid() };\r\n      await setList(oldList => oldList.insert(0, newAct));\r\n      setActiveIndex(newAct.id);\r\n    },\r\n    editActivity(id, activity) {\r\n      setList(oldList => {\r\n        const index = oldList.findIndex(act => act.id === id);\r\n        return oldList.set(index, activity);\r\n      });\r\n    },\r\n    deleteActivity(id) {\r\n      setList(oldList => {\r\n        const index = oldList.findIndex(act => act.id === id);\r\n        return oldList.delete(index);\r\n      });\r\n    },\r\n    reset() {\r\n      setList(List([]));\r\n      setActiveIndex(null);\r\n    },\r\n    activeIndex,\r\n    setActiveIndex\r\n  };\r\n\r\n  React.useEffect(\r\n    () => {\r\n      localStorage.setItem(\"list\", JSON.stringify(list.toArray()));\r\n    },\r\n    [list]\r\n  );\r\n\r\n  return (\r\n    <ActivityContext.Provider value={value}>\r\n      {props.children}\r\n    </ActivityContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ActivityContext;\r\n","import React from 'react';\r\nimport { css } from \"@emotion/core\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\n\r\nexport function themed(Component) {\r\n  return props => {\r\n    const { theme } = React.useContext(ThemeContext);\r\n    return <Component {...props} theme={theme} />;\r\n  };\r\n}\r\n\r\nexport const basicStyle = props =>\r\n  css`\r\n    color: ${props.theme.color || \"black\"};\r\n    background-color: ${props.theme.background || \"white\"};\r\n    font-family: monospace;\r\n  `;\r\n\r\nexport const containerStyle = props =>\r\n  css`\r\n    padding: 15px;\r\n    max-width: 600px;\r\n    border: solid 1px dimgray;\r\n    margin: 30px auto;\r\n  `;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { basicStyle, themed } from \"./common\";\r\nimport Color from \"color\";\r\n\r\nconst Btn = themed(styled.button`\r\n  ${basicStyle};\r\n  ${props => (props.color ? `color: ${props.color};` : \"\")}\r\n  border: ${props => (props.readOnly ? \"none\" : \"solid 2px gray\")};\r\n  padding: ${props => (props.small ? \"5px 15px\" : \"10px 25px\")};\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: ${props => (props.small ? \"12px\" : \"16px\")};\r\n  cursor: ${props => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n  ${props =>\r\n    props.disabled\r\n      ? `\r\n  color: lightgrey;\r\n  border-color: lightgrey;\r\n  `\r\n      : \"\"}\r\n  :hover {\r\n    background-color: ${props => {\r\n      if (props.disabled || props.readOnly)\r\n        return Color(props.theme.background).string();\r\n      return Color(props.theme.background)\r\n        .negate()\r\n        .alpha(0.2)\r\n        .string();\r\n    }};\r\n  }\r\n  :active {\r\n    background-color: ${props => {\r\n      if (props.readOnly) return Color(props.theme.background).string();\r\n      return Color(props.theme.background)\r\n        .negate()\r\n        .alpha(0.3)\r\n        .string();\r\n    }};\r\n  }\r\n  :not(:last-child) {\r\n    margin-right: 5px;\r\n  }\r\n`);\r\n\r\nexport default function(props) {\r\n  return (\r\n    <Btn\r\n      {...props}\r\n      onClick={e => {\r\n        if (props.disabled || props.readOnly) return;\r\n        props.onClick && props.onClick(e);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { basicStyle, containerStyle, themed } from \"./common\";\r\n\r\nexport default themed(styled.div`\r\n  ${basicStyle};\r\n  ${containerStyle};\r\n`);\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nconst CATEGORIES = [\"Personal\", \"Business\", \"Fitness\", \"Fun\"];\r\n\r\nexport default function(props) {\r\n  return (\r\n    <div>\r\n      <b>Select Category</b>\r\n      {CATEGORIES.map(cat => (\r\n        <div key={cat} style={{ margin: 5 }}>\r\n          <Button onClick={() => props.onChange && props.onChange(cat)}>\r\n            {cat}\r\n          </Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { basicStyle, containerStyle, themed } from \"./common\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport { Map } from \"immutable\";\r\n\r\nimport get from \"lodash/get\";\r\nimport moment from \"moment\";\r\nimport hash from \"object-hash\";\r\nimport { DatetimePicker } from \"rc-datetime-picker\";\r\nimport Button from \"./Button\";\r\nimport CategoryPicker from \"./CategoryPicker\";\r\nimport Color from \"color\";\r\nimport ActivityContext from \"../contexts/ActivityContext\";\r\n\r\nconst EDIT_MODES = {\r\n  DUE_DATE: 1,\r\n  CATEGORY: 2,\r\n  STATUS: 3\r\n};\r\n\r\nconst StyledContainer = themed(\r\n  styled.div`\r\n    ${basicStyle};\r\n    ${containerStyle};\r\n    border-color: lightgrey;\r\n    padding-top: 0px;\r\n    ${props =>\r\n      props.active\r\n        ? `\r\n    border-width: 5px;\r\n    border-color: orange;\r\n    `\r\n        : `cursor: pointer;`}\r\n    :hover {\r\n      background-color: ${props => {\r\n        if (props.active) return Color(props.theme.background).string();\r\n        return Color(props.theme.background)\r\n          .negate()\r\n          .alpha(0.1)\r\n          .string();\r\n      }};\r\n    }\r\n  `\r\n);\r\n\r\nconst TextArea = themed(styled(TextareaAutosize)`\r\n  ${basicStyle};\r\n  border: none;\r\n  resize: none;\r\n  width: 100%;\r\n  outline: none;\r\n  -webkit-box-shadow: none;\r\n  -moz-box-shadow: none;\r\n  box-shadow: none;\r\n  margin-top: 5px;\r\n`);\r\n\r\nconst Title = styled(TextArea)`\r\n  font-size: x-large;\r\n  border-bottom: solid 1px lightgrey;\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Controls = themed(styled.div`\r\n  margin-top: 10px;\r\n`);\r\nconst ControlEditor = themed(styled.div`\r\n  border-top: solid 1px lightgrey;\r\n  padding-top: 10px;\r\n  margin-top: 10px;\r\n`);\r\n\r\nconst Actions = themed(styled.div`\r\n  border-top: solid 1px lightgrey;\r\n  padding-top: 10px;\r\n  margin-top: 10px;\r\n  text-align: right;\r\n`);\r\n\r\nconst XBtn = themed(styled.div`\r\n  ${basicStyle};\r\n  font-size: large;\r\n  float: right;\r\n  cursor: pointer;\r\n  padding: 0px 10px;\r\n`);\r\n\r\nconst LabeledButton = props => (\r\n  <Button small {...props}>\r\n    {props.value ? (\r\n      <>\r\n        <b>{props.label}: </b>\r\n        {props.value}\r\n      </>\r\n    ) : (\r\n      `Set ${props.label}`\r\n    )}\r\n  </Button>\r\n);\r\n\r\nconst dateShortcuts = {\r\n  Today: moment(),\r\n  Yesterday: moment().subtract(1, \"days\"),\r\n  Clear: \"\"\r\n};\r\n\r\nfunction getInitialState(value) {\r\n  return {\r\n    name: \"\",\r\n    details: \"\",\r\n    category: null,\r\n    status: \"Incomplete\",\r\n    ...value,\r\n    dueDate: value.dueDate && moment(value.dueDate)\r\n  };\r\n}\r\n\r\nexport default props => {\r\n  const [editMode, setEditMode] = React.useState(null);\r\n  const [changed, setChanged] = React.useState(false);\r\n  const [state, setState] = React.useState(Map(getInitialState(props.value)));\r\n  const activityContext = React.useContext(ActivityContext);\r\n\r\n  React.useEffect(\r\n    () => {\r\n      const hasChanged =\r\n        hash(getInitialState(props.value)) !== hash(state.toObject());\r\n      setChanged(hasChanged);\r\n    },\r\n    [state, props.value]\r\n  );\r\n\r\n  const dueDateVal =\r\n    state.get(\"dueDate\") && state.get(\"dueDate\").format(\"YYYY-MM-DD HH:mm\");\r\n\r\n  return (\r\n    <>\r\n      <StyledContainer {...props}>\r\n        <Title\r\n          placeholder=\"Activity Name\"\r\n          useCacheForDOMMeasurements\r\n          value={state.get(\"name\")}\r\n          onChange={e => {\r\n            const txt = get(e, \"target.value\");\r\n            setState(oldValue => oldValue.set(\"name\", txt));\r\n          }}\r\n        />\r\n        <TextArea\r\n          useCacheForDOMMeasurements\r\n          placeholder=\"Details here..\"\r\n          value={state.get(\"details\")}\r\n          onChange={e => {\r\n            const txt = get(e, \"target.value\");\r\n            setState(oldValue => oldValue.set(\"details\", txt));\r\n          }}\r\n        />\r\n        <Controls>\r\n          <LabeledButton\r\n            readOnly={!props.active}\r\n            label=\"Due Date\"\r\n            value={dueDateVal}\r\n            title={dueDateVal}\r\n            onClick={() => {\r\n              setEditMode(EDIT_MODES.DUE_DATE);\r\n              setState(oldState => oldState.set(\"dueDate\", moment()));\r\n            }}\r\n          />\r\n          <LabeledButton\r\n            readOnly={!props.active}\r\n            label=\"Category\"\r\n            value={state.get(\"category\")}\r\n            onClick={() => {\r\n              setEditMode(EDIT_MODES.CATEGORY);\r\n            }}\r\n          />\r\n          <LabeledButton\r\n            readOnly={!props.active}\r\n            label=\"Status\"\r\n            value={`${state.get(\"status\")}${\r\n              state.get(\"status\") === \"Completed\" ? \" ✔\" : \" ✘\"\r\n            }`}\r\n            onClick={() => {\r\n              setState(oldState =>\r\n                oldState.set(\r\n                  \"status\",\r\n                  state.get(\"status\") === \"Completed\"\r\n                    ? \"Incompleted\"\r\n                    : \"Completed\"\r\n                )\r\n              );\r\n            }}\r\n          />\r\n        </Controls>\r\n        {props.active &&\r\n          (editMode ? (\r\n            <ControlEditor>\r\n              <XBtn onClick={() => setEditMode(null)}>X</XBtn>\r\n              <div style={{ clear: \"both\" }}>\r\n                <center>\r\n                  {editMode === EDIT_MODES.DUE_DATE && (\r\n                    <>\r\n                      <span>Select Due Date:</span>\r\n                      <DatetimePicker\r\n                        shortcuts={dateShortcuts}\r\n                        moment={state.get(\"dueDate\")}\r\n                        onChange={moment =>\r\n                          setState(oldState => oldState.set(\"dueDate\", moment))\r\n                        }\r\n                      />\r\n                      <span style={{ fontSize: \"large\" }}>{dueDateVal}</span>\r\n                      <Button\r\n                        small\r\n                        style={{ margin: 5 }}\r\n                        onClick={() => {\r\n                          setEditMode(null);\r\n                        }}\r\n                      >\r\n                        Ok\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                  {editMode === EDIT_MODES.CATEGORY && (\r\n                    <CategoryPicker\r\n                      onChange={cat => {\r\n                        setState(oldState => oldState.set(\"category\", cat));\r\n                        setEditMode(null);\r\n                      }}\r\n                    />\r\n                  )}\r\n                </center>\r\n              </div>\r\n            </ControlEditor>\r\n          ) : (\r\n            <Actions>\r\n              <Button\r\n                small\r\n                color=\"blue\"\r\n                disabled={!changed}\r\n                onClick={() => {\r\n                  activityContext.editActivity(props.id, state.toObject());\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button\r\n                small\r\n                color=\"red\"\r\n                onClick={() => activityContext.deleteActivity(props.id)}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                small\r\n                color=\"grey\"\r\n                onClick={e => {\r\n                  e.stopPropagation();\r\n                  activityContext.setActiveIndex(null);\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Actions>\r\n          ))}\r\n      </StyledContainer>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ThemeContext from \"../contexts/ThemeContext\";\r\nimport Switch from \"react-switch\";\r\n\r\nexport default function ThemeSwitcher() {\r\n  const [nightModeEnabled, setNightMode] = React.useState(false);\r\n  const { setTheme, themes } = React.useContext(ThemeContext);\r\n  React.useEffect(\r\n    () => {\r\n      setTheme(nightModeEnabled ? themes.dark : themes.light);\r\n    },\r\n    [nightModeEnabled]\r\n  );\r\n  return (\r\n    <Switch\r\n      onChange={setNightMode}\r\n      checked={nightModeEnabled}\r\n      uncheckedIcon={\r\n        <img\r\n          height=\"15\"\r\n          width=\"15\"\r\n          alt=\"night\"\r\n          style={{ margin: 6 }}\r\n          src=\"https://svgshare.com/i/Au6.svg\"\r\n          title=\"night\"\r\n        />\r\n      }\r\n      checkedIcon={\r\n        <img\r\n          height=\"20\"\r\n          width=\"20\"\r\n          alt=\"day\"\r\n          style={{ margin: 4 }}\r\n          src=\"https://svgshare.com/i/Atp.svg\"\r\n          title=\"day\"\r\n        />\r\n      }\r\n      className=\"react-switch\"\r\n      id=\"icon-switch\"\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Provider as ThemeContextProvider } from \"./contexts/ThemeContext\";\nimport ActivityContext, {\n  Provider as ActContextProvider\n} from \"./contexts/ActivityContext\";\n\nimport ThemedButton from \"./components/Button\";\nimport MainContainer from \"./components/MainContainer\";\nimport Activity from \"./components/Activity\";\nimport ThemeSwitcher from \"./components/ThemeSwitcher\";\nimport styled from \"@emotion/styled\";\nimport { GITHUB_LINK } from \"./config\";\n\nconst FloatRight = styled.div`\n  float: right;\n`;\n\nconst Divider = styled.div`\n  clear: both;\n`;\n\nconst Stats = styled.div`\n  clear: both;\n  padding-top: 10px;\n`;\n\nconst ActivityList = props => {\n  const { list, setActiveIndex, activeIndex } = React.useContext(\n    ActivityContext\n  );\n  return list.map(act => (\n    <Activity\n      key={act.id}\n      id={act.id}\n      value={act}\n      active={activeIndex === act.id}\n      onClick={() => setActiveIndex(act.id)}\n    />\n  ));\n};\n\nconst HeaderControls = props => {\n  const { newActivity, reset, list } = React.useContext(ActivityContext);\n  return (\n    <>\n      <FloatRight>\n        <ThemedButton onClick={() => newActivity()}>New Activity</ThemedButton>\n        <ThemedButton onClick={() => reset()}>Reset</ThemedButton>\n      </FloatRight>\n      <Stats>\n        <div>Activities: {list.length}</div>\n        <div>\n          Completed: {list.filter(act => act.status === \"Completed\").length}\n        </div>\n      </Stats>\n    </>\n  );\n};\n\nconst Github = styled.div`\n  top: -50px;\n  position: relative;\n  height: 0;\n  right: -20px;\n`;\n\nexport default props => {\n  return (\n    <ThemeContextProvider>\n      <ActContextProvider>\n        <MainContainer>\n          <div>\n            <FloatRight>\n              <Github>\n                <a href={GITHUB_LINK}>Github</a>\n              </Github>\n              <ThemeSwitcher />\n            </FloatRight>\n            <h1>My Activities</h1>\n          </div>\n          <HeaderControls />\n          <Divider />\n        </MainContainer>\n        <ActivityList />\n      </ActContextProvider>\n    </ThemeContextProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = {\n  GITHUB_LINK: \"https://github.com/incr3m/activity-pwa\"\n};\n"],"sourceRoot":""}